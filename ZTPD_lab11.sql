-- Operator CONTAINS - Podstawy

-- ZADANIE 1
CREATE TABLE CYTATY AS SELECT * FROM ZTPD.CYTATY;

-- ZADANIE 2
SELECT AUTOR, TEKST 
FROM CYTATY 
WHERE LOWER(TEKST) LIKE '%optymista%'
AND LOWER(TEKST) LIKE '%pesymista%';

-- ZADANIE 3 
CREATE INDEX CYTATY_IDX ON
CYTATY(TEKST)
INDEXTYPE IS CTXSYS.CONTEXT;

-- ZADANIE 4 
SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'optymista AND pesymista', 1) > 0;

-- ZADANIE 5
SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'pesymista AND NOT optymista', 1) > 0;

--ZADANIE 6
SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'NEAR((optymista, pesymista), 3)') > 0;

-- ZADANIE 7 
SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'NEAR((optymista, pesymista), 10)') > 0;

-- ZADANIE 8
SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'życi%') > 0;

-- ZADANIE 9 
SELECT AUTOR, TEKST, SCORE(1) DOPASOWANIE
FROM CYTATY
WHERE CONTAINS(TEKST, 'życi%', 1) > 0;

-- ZADANIE 10 
SELECT AUTOR, TEKST, SCORE(1) DOPASOWANIE
FROM CYTATY
WHERE CONTAINS(TEKST, 'życi%', 1) > 0
ORDER BY DOPASOWANIE DESC
FETCH FIRST 1 ROWS ONLY;

-- ZADANIE 11
SELECT AUTOR, TEKST
FROM CYTATY
WHERE CONTAINS(TEKST, 'FUZZY(probelm)', 1) > 0;

-- ZADANIE 12 
INSERT INTO CYTATY (ID, AUTOR, TEKST)
VALUES ((SELECT MAX(ID) + 1 FROM CYTATY), 'Bertrand Russell', 'To smutne, że głupcy są tacy pewni siebie, a ludzie rozsądni tacy pełni wątpliwości.');
COMMIT;

-- ZADANIE 13
SELECT AUTOR, TEKST 
FROM CYTATY
WHERE CONTAINS(TEKST, 'głupcy') > 0;

-- ZADANIE 14 
SELECT * FROM DR$CYTATY_IDX$I;

-- ZADANIE 15 
DROP INDEX CYTATY_IDX;

CREATE INDEX CYTATY_IDX ON
CYTATY(TEKST)
INDEXTYPE IS CTXSYS.CONTEXT;

-- ZADANIE 16 
SELECT * FROM DR$CYTATY_IDX$I;

SELECT AUTOR, TEKST 
FROM CYTATY
WHERE CONTAINS(TEKST, 'głupcy') > 0;

-- ZADANIE 17 
DROP INDEX CYTATY_IDX;
DROP TABLE CYTATY;

-- Zaawansowane indeksowanie i wyszukiwanie 

-- ZADANIE 1
CREATE TABLE QUOTES AS SELECT * FROM ZTPD.QUOTES; 

-- ZADANIE 2
CREATE INDEX QUOTES_IDX ON
QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT;

-- ZADANIE 3
SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, 'work') > 0;

SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, '$work') > 0;

SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, 'working') > 0;

SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, '$working') > 0;

-- ZADANIE 4
SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, 'it') > 0;

-- ZADANIE 5 
SELECT * FROM CTX_STOPLISTS;

-- ZADANIE 6
SELECT * FROM CTX_STOPWORDS;

-- ZADANIE 7
DROP INDEX QUOTES_IDX;

CREATE INDEX QUOTES_IDX ON
QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS('stoplist CTXSYS.EMPTY_STOPLIST');

-- ZADANIE 8 
SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, 'it') > 0;

-- ZADANIE 9
SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, 'fool AND humans') > 0;

-- ZADANIE 10 
SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, 'fool AND computer') > 0;

-- ZADANIE 11
SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, '(fool AND computer) within SENTENCE') > 0;

-- ZADANIE 12 
DROP INDEX QUOTES_IDX;

-- ZADANIE 13
begin
    ctx_ddl.create_section_group('nullgroup', 'NULL_SECTION_GROUP');
    ctx_ddl.add_special_section('nullgroup', 'SENTENCE');
    ctx_ddl.add_special_section('nullgroup', 'PARAGRAPH');
end;

-- ZADANIE 14
CREATE INDEX QUOTES_IDX ON
QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS('section group nullgroup');

-- ZADANIE 15
SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, '(fool AND humans) WITHIN SENTENCE') > 0;

SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, '(fool AND computer) WITHIN SENTENCE') > 0;

-- ZADANIE 16 
SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, 'humans') > 0;

-- ZADANIE 17 
DROP INDEX QUOTES_IDX;

begin
    ctx_ddl.create_preference('lex_z_m','BASIC_LEXER');
    ctx_ddl.set_attribute('lex_z_m',
    'printjoins', '_-');
    ctx_ddl.set_attribute ('lex_z_m',
    'index_text', 'YES');
end;

CREATE INDEX QUOTES_IDX ON
QUOTES(TEXT)
INDEXTYPE IS CTXSYS.CONTEXT
PARAMETERS('LEXER lex_z_m');

-- ZADANIE 18
SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, 'humans') > 0;

-- ZADANIE 19 
SELECT * FROM QUOTES
WHERE CONTAINS(TEXT, 'non\-humans') > 0;

-- ZADANIE 20
DROP INDEX QUOTES_IDX;

DROP TABLE QUOTES;

begin
    ctx_ddl.drop_preference('lex_z_m');
end;